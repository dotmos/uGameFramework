## service start
using System.Collections.Generic;
using MoonSharp.Interpreter;
         
namespace Service.FileSystem {            
    public interface IFileSystemService {  
		## "Get path as string for given domain"
		string GetPath(?FSDomain domain,string realtivePart="");
		## "Write bytes to file"
		bool WriteBytesToFile(string pathToFile, ("byte[]") bytes,bool compress=False);
		## "Write bytes to file at domain"
		bool WriteBytesToFileAtDomain(?FSDomain domain, string relativePathToFile, ("byte[]") bytes,bool compress=False); 
		## "Write string to file"
		bool WriteStringToFile(string pathToFile, string thedata);
		## "Write string to file at domain"
		bool WriteStringToFileAtDomain(?FSDomain domain, string relativePathToFile, string thedata); 
		## "Load file as string"
		string LoadFileAsString(string pathToFile,bool compressed=False);
		## "Load file as string from domain"     
		string LoadFileAsStringAtDomain(?FSDomain domain, string relativePathToFile);
		## "Load file as bytes"
		("byte[]") LoadFileAsBytes(string pathToFile,bool compressed=False, int estimatedUncompressedSize=0);
		## "Load file as string from domain"
		("byte[]") LoadFileAsBytesAtDomain(?FSDomain domain, string relativePathToFile,bool compressed=False, int estimatedUncompressedSize=0);
		## "Get all absolute file-paths in specified path with optional filter (see https://msdn.microsoft.com/en-us/library/wz42302f(v=vs.110).aspx#Remarks )"
		List<string> GetFilesInAbsFolder(string absPath, string pattern="*.*");
		## "Get all absolute file-paths in specified domain with optional filter (see https://msdn.microsoft.com/en-us/library/wz42302f(v=vs.110).aspx#Remarks )"
		List<string> GetFilesInDomain(?FSDomain domain, string innerDomainPath="", string filter="*.*");
		## "Remove file from filesystem"
		void RemoveFile(string filePath);
		## "Remove file in domain"
		void RemoveFileInDomain(?FSDomain domain,string relativePath);
		## "Check if a file exists(absolute)"
		bool FileExists(string pathToFile);
		## "Check if a file exists in a domain(relative to domain-root)"
		bool FileExistsInDomain(?FSDomain domain,string relativePath);
    }      
}     
## model
 
public enum FSDomain {
	Scripting,
	RuntimeAssets,
	DevUIViews,
	DevUIViewsArchieve,
	ConfigFolder,
	SaveGames
}  

## events 

## service end