///////////////////////////////////////////////////////////////////////
//
// WARNING: THIS FILE IS AUTOGENERATED! DO NOT CHANGE IT
//
////////////////////////////////////////////////////////////////////// 

using System;
using System.Collections.Generic;
using MoonSharp.Interpreter;
using Service.GameStateService;

using static Service.TimeService.Events;
using UniRx;
using Zenject;
using System.Runtime.Serialization;
using System.Collections.Generic;

namespace Service.TimeService {
    public interface ITimeService {



		/// <summary>
        /// Adds a timer in the global update-method and calls the callback n-times (or infinite till application end) 
        /// <param name="interval"></param>
        /// <param name="callback"></param>
        /// <param name="repeatTimes"></param>
        /// <param name="info"></param>
 /// </summary>
        

					TimerElement CreateGlobalTimer(float interval,Action callback,int repeatTimes,string info="");


					void RemoveGlobalTimer(TimerElement timer);

	}



    [DataContract(IsReference = true)]
    public partial class TimerElement {
        [DataMember]public string info ;
        [DataMember]public float timeLeft ;
        [DataMember]public float interval ;
        [DataMember]public int repeatTimes ;
        [DataMember]public Action timerCallback ;

    }

}
///////////////////////////////////////////////////////////////////////
//
// WARNING: THIS FILE IS AUTOGENERATED! DO NOT CHANGE IT
//
////////////////////////////////////////////////////////////////////// 
